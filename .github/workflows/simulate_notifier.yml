name: Simulate carb_notifier (no email)

on:
  workflow_dispatch: {}     # bottone "Run workflow"
  push:                     # parte subito al prossimo commit su main
    branches: [ main ]
  schedule:
    - cron: "5 5 * * *"     # 05:05 UTC ≈ 07:05 d’estate in Italia

jobs:
  simulate:
    runs-on: ubuntu-latest
    env:
      REGIONE: "Lombardia"
      DATA_SOURCE: "csv"
      PYTHONPATH: ${{ github.workspace }}/src   # <-- QUI
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run simulation (no email sent)
        run: |
          python - <<'PY'
          import os

          REGIONE = os.getenv("REGIONE", "Lombardia")
          DATA_SOURCE = os.getenv("DATA_SOURCE", "csv").lower()

          from extractor import estrai_prezzi_lombardia, prezzi_to_html
          from downloader import scarica_pagina_mimit
          from csv_extractor import estrai_prezzi_da_csv

          print(f"[INFO] Simulazione | REGIONE={REGIONE} | DATA_SOURCE={DATA_SOURCE}")

          if DATA_SOURCE == "csv":
            dati = estrai_prezzi_da_csv(REGIONE)
          elif DATA_SOURCE == "html":
            html = scarica_pagina_mimit()
            dati = estrai_prezzi_lombardia(html)
          else:
            raise SystemExit(f"DATA_SOURCE non valido: {DATA_SOURCE}")

          compatti = [f"{v['carburante']} {v['tipo'] or ''}={v['prezzo']}".strip() for v in dati]
          print("[INFO] Prezzi:", ", ".join(compatti))

          html_email = prezzi_to_html(dati)
          print("[INFO] HTML len:", len(html_email))
          print("[INFO] SIMULAZIONE COMPLETATA (nessuna email inviata)")
          PY
